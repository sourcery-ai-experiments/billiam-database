{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v5.json", "dbt_version": "1.7.13", "generated_at": "2024-05-04T05:47:50.132001Z", "invocation_id": "c8db74a3-0797-43d7-b848-6780ce84bd56", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-04T05:47:49.142159Z", "completed_at": "2024-05-04T05:47:49.158718Z"}, {"name": "execute", "started_at": "2024-05-04T05:47:49.159921Z", "completed_at": "2024-05-04T05:47:49.159935Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02000117301940918, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.billiam_database.stg__daily_tracker", "compiled": true, "compiled_code": "\n\n\n\n    with recursive\n    src_tracker as (\n        select *\n        from 'billiam_database/models/source/daily_tracker.csv'\n    ),\n\nfinal as (\n    select\n        date_time::timestamp as date_time,\n        trim(\"task\") as project,\n        coalesce(trim(detail), '') as detail,\n        \"interval\"::integer as minutes,\n        trim(company) as company\n    from src_tracker\n)\n\nselect * from final", "relation_name": "billiam.staging.daily_tracker"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-04T05:47:49.163768Z", "completed_at": "2024-05-04T05:47:49.167746Z"}, {"name": "execute", "started_at": "2024-05-04T05:47:49.168878Z", "completed_at": "2024-05-04T05:47:49.168885Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007276773452758789, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.billiam_database.stg__finances", "compiled": true, "compiled_code": "\n\n\n\n    with recursive\n    src_finances as (\n        select *\n        from 'billiam_database/models/source/finances.csv'\n    ),\n\nfinal as (\n    -- noqa: disable=RF06\n    select\n        row_number() over () as row_id,  /* Just for maintaining uniqueness */\n        \"Transaction\"::int as transaction_id,\n        \"Date\"::date as transaction_date,\n        trim(\"Item\") as item,\n        translate(\"Cost\", '\u00a3,', '')::decimal(18, 2) as \"cost\",\n        trim(\"Category\") as category,\n        trim(\"Retailer\") as counterparty,\n        trim(\"Payment Method\") as payment_method,  -- noqa: RF05\n        coalesce(\"Exclusion\"::bool, false) as exclusion_flag,\n        \"Reimbursement Transaction\"::int as reimbursement_transaction_id  -- noqa: RF05\n    from src_finances\n    -- noqa: enable=RF06\n)\n\nselect * from final", "relation_name": "billiam.staging.finances"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-04T05:47:49.174291Z", "completed_at": "2024-05-04T05:47:49.218157Z"}, {"name": "execute", "started_at": "2024-05-04T05:47:49.219314Z", "completed_at": "2024-05-04T05:47:49.219322Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.04913830757141113, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.billiam_database.stg__monzo_transactions", "compiled": true, "compiled_code": "\n\n\n\n    with recursive\n    src_monzo_transactions as (\n        select *\n        from 'billiam_database/models/source/monzo_transactions.csv'\n    ),\n\nfinal as (\n    -- noqa: disable=RF06\n    select\n        \"Transaction ID\" as transaction_id,  -- noqa: RF05\n        \"Date\"::date as transaction_date,\n        \"Time\"::time as transaction_time,\n        trim(\"Type\") as \"type\",\n        trim(\"Name\") as counterparty,\n        \"Emoji\" as emoji,\n        trim(\"Category\") as category,\n        -\"Amount\"::decimal(18, 2) as \"cost\",\n        \"Currency\" as currency,\n        -\"Local amount\"::decimal(18, 2) as local_cost,  -- noqa: RF05\n        \"Local currency\" as local_currency,  -- noqa: RF05\n        \"Notes and #tags\" as notes,  -- noqa: RF05\n        \"Address\" as address,\n        trim(\"Receipt\") as receipt,\n        trim(\"Description\") as description,\n        \"Category split\" as category_split,  -- noqa: RF05\n    from src_monzo_transactions\n    -- noqa: enable=RF06\n)\n\nselect * from final", "relation_name": "billiam.staging.monzo_transactions"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-04T05:47:49.223041Z", "completed_at": "2024-05-04T05:47:49.226021Z"}, {"name": "execute", "started_at": "2024-05-04T05:47:49.227136Z", "completed_at": "2024-05-04T05:47:49.227143Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006221771240234375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "operation.billiam_database.billiam_database-on-run-end-0", "compiled": true, "compiled_code": "", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-04T05:47:49.230550Z", "completed_at": "2024-05-04T05:47:49.234781Z"}, {"name": "execute", "started_at": "2024-05-04T05:47:49.235927Z", "completed_at": "2024-05-04T05:47:49.235932Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007527589797973633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "operation.billiam_database.billiam_database-on-run-start-0", "compiled": true, "compiled_code": "\n    \n    \n    \n    CREATE OR REPLACE MACRO within(expr, lower_bound, upper_bound) AS\n        GREATEST(LEAST(expr, upper_bound), lower_bound)\n    ;\n;\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-04T05:47:49.239333Z", "completed_at": "2024-05-04T05:47:49.240877Z"}, {"name": "execute", "started_at": "2024-05-04T05:47:49.242037Z", "completed_at": "2024-05-04T05:47:49.242042Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.004756927490234375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.billiam_database.work_absences", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-04T05:47:49.245507Z", "completed_at": "2024-05-04T05:47:49.246946Z"}, {"name": "execute", "started_at": "2024-05-04T05:47:49.248058Z", "completed_at": "2024-05-04T05:47:49.248063Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00478816032409668, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.billiam_database.work_hours", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-04T05:47:49.251661Z", "completed_at": "2024-05-04T05:47:49.316952Z"}, {"name": "execute", "started_at": "2024-05-04T05:47:49.318179Z", "completed_at": "2024-05-04T05:47:49.318188Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.07164311408996582, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.billiam_database.pl__daily_tracker", "compiled": true, "compiled_code": "\n\n\n\n    with recursive\n    stg_tracker as (\n        select \n          /* no columns returned from star() macro */\n        from billiam.staging.daily_tracker\n    ),\n\nfinal as (\n    select\n        date_time,\n        project,\n        detail,\n        minutes,\n        company\n    from stg_tracker\n)\n\nselect * from final", "relation_name": "billiam.presentation.daily_tracker"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-04T05:47:49.324707Z", "completed_at": "2024-05-04T05:47:49.355900Z"}, {"name": "execute", "started_at": "2024-05-04T05:47:49.357053Z", "completed_at": "2024-05-04T05:47:49.357059Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.03729724884033203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.billiam_database.pl__task_details", "compiled": true, "compiled_code": "\n\n\n\n    with recursive\n    src_tracker as (\n        select \n          /* no columns returned from star() macro */\n        from billiam.staging.daily_tracker\n    ),\n\nfinal as (\n    select\n        grouping_id(project, detail)::integer as group_id,\n        case grouping_id(project, detail)\n            when 0 then 'Task and detail'\n            when 1 then 'Task only'\n        end as group_description,\n        project,\n        coalesce(detail, '') as detail,\n\n        count(*)::integer as total_records,\n        sum(minutes)::integer as total_time,\n        min(date_time) as start_time,\n        max(date_time) as end_time,\n    from src_tracker\n    -- noqa: disable=RF06, PRS\n    -- SQLFluff thinks that `GROUPING SETS` is a column name?!\n    group by grouping sets (\n        (project, detail),\n        (project)\n    )\n    -- noqa: enable=RF06, PRS\n)\n\nselect * from final", "relation_name": "billiam.presentation.task_details"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-04T05:47:49.363419Z", "completed_at": "2024-05-04T05:47:49.376630Z"}, {"name": "execute", "started_at": "2024-05-04T05:47:49.377850Z", "completed_at": "2024-05-04T05:47:49.377855Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.016572237014770508, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.billiam_database.accepted_values_stg__daily_tracker_company__TSB__Jaja__Allica__Sainsbury_s.9489542842", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        company as value_field,\n        count(*) as n_records\n\n    from billiam.staging.daily_tracker\n    group by company\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'TSB','Jaja','Allica','Sainsbury''s'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-04T05:47:49.381328Z", "completed_at": "2024-05-04T05:47:49.389767Z"}, {"name": "execute", "started_at": "2024-05-04T05:47:49.390917Z", "completed_at": "2024-05-04T05:47:49.390921Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.011703729629516602, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.billiam_database.not_null_stg__daily_tracker_company.f15160b208", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect company\nfrom billiam.staging.daily_tracker\nwhere company is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-04T05:47:49.394344Z", "completed_at": "2024-05-04T05:47:49.398647Z"}, {"name": "execute", "started_at": "2024-05-04T05:47:49.399765Z", "completed_at": "2024-05-04T05:47:49.399769Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007508277893066406, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.billiam_database.not_null_stg__daily_tracker_date_time.107b919c02", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date_time\nfrom billiam.staging.daily_tracker\nwhere date_time is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-04T05:47:49.403132Z", "completed_at": "2024-05-04T05:47:49.408772Z"}, {"name": "execute", "started_at": "2024-05-04T05:47:49.409920Z", "completed_at": "2024-05-04T05:47:49.409924Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00883936882019043, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.billiam_database.not_null_stg__daily_tracker_detail.1496e623bf", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect detail\nfrom billiam.staging.daily_tracker\nwhere detail is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-04T05:47:49.413244Z", "completed_at": "2024-05-04T05:47:49.417619Z"}, {"name": "execute", "started_at": "2024-05-04T05:47:49.418762Z", "completed_at": "2024-05-04T05:47:49.418766Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007579803466796875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.billiam_database.not_null_stg__daily_tracker_minutes.d3002618cb", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect minutes\nfrom billiam.staging.daily_tracker\nwhere minutes is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-04T05:47:49.422153Z", "completed_at": "2024-05-04T05:47:49.426319Z"}, {"name": "execute", "started_at": "2024-05-04T05:47:49.427448Z", "completed_at": "2024-05-04T05:47:49.427452Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0073947906494140625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.billiam_database.not_null_stg__daily_tracker_project.ac347f4101", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect project\nfrom billiam.staging.daily_tracker\nwhere project is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-04T05:47:49.431013Z", "completed_at": "2024-05-04T05:47:49.437161Z"}, {"name": "execute", "started_at": "2024-05-04T05:47:49.438344Z", "completed_at": "2024-05-04T05:47:49.438348Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009615182876586914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.billiam_database.unique_stg__daily_tracker_date_time.d1b1f0cab2", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    date_time as unique_field,\n    count(*) as n_records\n\nfrom billiam.staging.daily_tracker\nwhere date_time is not null\ngroup by date_time\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-04T05:47:49.441751Z", "completed_at": "2024-05-04T05:47:49.473176Z"}, {"name": "execute", "started_at": "2024-05-04T05:47:49.474396Z", "completed_at": "2024-05-04T05:47:49.474402Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.03761625289916992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.billiam_database.int__transactions", "compiled": true, "compiled_code": "\n\n\n\n    with recursive\n    stg_finances as (\n        select \n          /* no columns returned from star() macro */\n        from billiam.staging.finances\n    ),\n\nfinal as (\n    select\n        transaction_id,\n        transaction_date,\n        round(sum(\"cost\"), 2) as \"cost\",\n        count(*) as item_count,\n        group_concat(distinct counterparty, '||') as counterparty,\n    from stg_finances\n    group by transaction_id, transaction_date\n    having not (count(*) = 2 and round(sum(\"cost\"), 2) = 0)  /* Exclude credit repayment transactions */\n    order by transaction_id\n)\n\nselect * from final", "relation_name": "billiam.intermediate.transactions"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-04T05:47:49.481090Z", "completed_at": "2024-05-04T05:47:49.485558Z"}, {"name": "execute", "started_at": "2024-05-04T05:47:49.486730Z", "completed_at": "2024-05-04T05:47:49.486734Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007911205291748047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.billiam_database.not_null_stg__finances_category.47765b77f9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect category\nfrom billiam.staging.finances\nwhere category is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-04T05:47:49.490202Z", "completed_at": "2024-05-04T05:47:49.496316Z"}, {"name": "execute", "started_at": "2024-05-04T05:47:49.497443Z", "completed_at": "2024-05-04T05:47:49.497447Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009434700012207031, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.billiam_database.not_null_stg__finances_cost.437ec48b36", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect cost\nfrom billiam.staging.finances\nwhere cost is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-04T05:47:49.500824Z", "completed_at": "2024-05-04T05:47:49.505195Z"}, {"name": "execute", "started_at": "2024-05-04T05:47:49.506384Z", "completed_at": "2024-05-04T05:47:49.506388Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007626533508300781, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.billiam_database.not_null_stg__finances_counterparty.3abba3e86c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect counterparty\nfrom billiam.staging.finances\nwhere counterparty is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-04T05:47:49.509774Z", "completed_at": "2024-05-04T05:47:49.513910Z"}, {"name": "execute", "started_at": "2024-05-04T05:47:49.515048Z", "completed_at": "2024-05-04T05:47:49.515052Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007386684417724609, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.billiam_database.not_null_stg__finances_exclusion_flag.ed5156eebb", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect exclusion_flag\nfrom billiam.staging.finances\nwhere exclusion_flag is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-04T05:47:49.518470Z", "completed_at": "2024-05-04T05:47:49.522718Z"}, {"name": "execute", "started_at": "2024-05-04T05:47:49.523844Z", "completed_at": "2024-05-04T05:47:49.523848Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00751185417175293, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.billiam_database.not_null_stg__finances_item.58714b3ccc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect item\nfrom billiam.staging.finances\nwhere item is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-04T05:47:49.527299Z", "completed_at": "2024-05-04T05:47:49.531777Z"}, {"name": "execute", "started_at": "2024-05-04T05:47:49.532932Z", "completed_at": "2024-05-04T05:47:49.532937Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007779359817504883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.billiam_database.not_null_stg__finances_payment_method.3423839e55", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect payment_method\nfrom billiam.staging.finances\nwhere payment_method is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-04T05:47:49.536487Z", "completed_at": "2024-05-04T05:47:49.541348Z"}, {"name": "execute", "started_at": "2024-05-04T05:47:49.542584Z", "completed_at": "2024-05-04T05:47:49.542590Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008304119110107422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.billiam_database.not_null_stg__finances_row_id.b35b6b6055", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect row_id\nfrom billiam.staging.finances\nwhere row_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-04T05:47:49.546095Z", "completed_at": "2024-05-04T05:47:49.552870Z"}, {"name": "execute", "started_at": "2024-05-04T05:47:49.554058Z", "completed_at": "2024-05-04T05:47:49.554064Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.010121345520019531, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.billiam_database.not_null_stg__finances_transaction_date.c4a917f991", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_date\nfrom billiam.staging.finances\nwhere transaction_date is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-04T05:47:49.557510Z", "completed_at": "2024-05-04T05:47:49.561880Z"}, {"name": "execute", "started_at": "2024-05-04T05:47:49.563013Z", "completed_at": "2024-05-04T05:47:49.563017Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007673501968383789, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.billiam_database.not_null_stg__finances_transaction_id.a4c3a99b45", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_id\nfrom billiam.staging.finances\nwhere transaction_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-04T05:47:49.566496Z", "completed_at": "2024-05-04T05:47:49.574773Z"}, {"name": "execute", "started_at": "2024-05-04T05:47:49.575944Z", "completed_at": "2024-05-04T05:47:49.575948Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.011660099029541016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.billiam_database.relationships_stg__finances_reimbursement_transaction_id__transaction_id__ref_stg__finances_.ea59af76e0", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select reimbursement_transaction_id as from_field\n    from (select * from billiam.staging.finances where reimbursement_transaction_id IS NOT NULL) dbt_subquery\n    where reimbursement_transaction_id is not null\n),\n\nparent as (\n    select transaction_id as to_field\n    from billiam.staging.finances\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-04T05:47:49.579392Z", "completed_at": "2024-05-04T05:47:49.583662Z"}, {"name": "execute", "started_at": "2024-05-04T05:47:49.584814Z", "completed_at": "2024-05-04T05:47:49.584818Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0076291561126708984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.billiam_database.unique_stg__finances_row_id.eaaeda8cae", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    row_id as unique_field,\n    count(*) as n_records\n\nfrom billiam.staging.finances\nwhere row_id is not null\ngroup by row_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-04T05:47:49.588304Z", "completed_at": "2024-05-04T05:47:49.635436Z"}, {"name": "execute", "started_at": "2024-05-04T05:47:49.636649Z", "completed_at": "2024-05-04T05:47:49.636656Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.05387520790100098, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.billiam_database.assert__monzo_transactions_reconcile__tfl", "compiled": true, "compiled_code": "\n    with recursive\n    stg_finances as (\n        select \n          /* no columns returned from star() macro */\n        from billiam.staging.finances\n    ),\n    stg_monzo_transactions as (\n        select \n          /* no columns returned from star() macro */\n        from billiam.staging.monzo_transactions\n    ),\n\nmy_txns AS (\n    SELECT\n        transaction_date,\n        SUM(cost)::NUMERIC(18, 2) AS cost,\n    FROM stg_finances\n    WHERE counterparty = 'TfL'\n      AND payment_method = 'Monzo'\n    GROUP BY transaction_date\n),\nmonzo_txns AS (\n    SELECT\n        transaction_date,\n        SUM(cost)::NUMERIC(18, 2) AS cost,\n    FROM stg_monzo_transactions\n    WHERE counterparty = 'Transport for London'\n      AND cost != 0\n    GROUP BY transaction_date\n),\n\ndates AS (\n        SELECT MIN(transaction_date) AS transaction_date\n        FROM my_txns\n    UNION ALL\n        SELECT transaction_date + INTERVAL 1 DAY\n        FROM dates\n        WHERE transaction_date < CURRENT_DATE\n),\n\njoined AS (\n    SELECT\n        transaction_date,\n        COALESCE(my_txns.cost, 0) AS cost__mine,\n        COALESCE(monzo_txns.cost, 0) AS cost__monzo,\n\n        SUM(cost__mine)  OVER t_date AS running_cost__mine,\n        SUM(cost__monzo) OVER t_date AS running_cost__monzo,\n\n        running_cost__mine = running_cost__monzo AS match_flag\n    FROM dates\n        LEFT JOIN my_txns    USING (transaction_date)\n        LEFT JOIN monzo_txns USING (transaction_date)\n    WINDOW t_date AS (ORDER BY transaction_date)\n)\n\n/*\nFor now, we just match \"close enough\" -- this is because the transactions\nare recorded at different times between the sources _and_ because the\ngrain is different, so it's harder to join them together with integrity.\n\nRemember that the `stg__finances` model records each _journey_, whereas\nthe `stg__monzo_transactions` model records each _transaction_ which can\ncorrespond to several journeys.\n\nWe apply an 80% match threshold to the running total, so if the running\ntotal is out for more than 20% of cases we flag this as a failure.\n*/\nSELECT 1.0 * SUM(match_flag::INT) / COUNT(*) AS match_ratio\nFROM joined\nHAVING match_ratio < 0.80", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-04T05:47:49.643715Z", "completed_at": "2024-05-04T05:47:49.650776Z"}, {"name": "execute", "started_at": "2024-05-04T05:47:49.651929Z", "completed_at": "2024-05-04T05:47:49.651935Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.010368585586547852, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.billiam_database.not_null_stg__monzo_transactions_transaction_date.ef899ac49c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_date\nfrom billiam.staging.monzo_transactions\nwhere transaction_date is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-04T05:47:49.655465Z", "completed_at": "2024-05-04T05:47:49.660213Z"}, {"name": "execute", "started_at": "2024-05-04T05:47:49.661371Z", "completed_at": "2024-05-04T05:47:49.661376Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008064985275268555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.billiam_database.not_null_stg__monzo_transactions_transaction_id.c828f70f9a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_id\nfrom billiam.staging.monzo_transactions\nwhere transaction_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-04T05:47:49.664850Z", "completed_at": "2024-05-04T05:47:49.669507Z"}, {"name": "execute", "started_at": "2024-05-04T05:47:49.670675Z", "completed_at": "2024-05-04T05:47:49.670681Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007935285568237305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.billiam_database.not_null_stg__monzo_transactions_transaction_time.dd063588dc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_time\nfrom billiam.staging.monzo_transactions\nwhere transaction_time is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-04T05:47:49.674119Z", "completed_at": "2024-05-04T05:47:49.678654Z"}, {"name": "execute", "started_at": "2024-05-04T05:47:49.679804Z", "completed_at": "2024-05-04T05:47:49.679808Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007805824279785156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.billiam_database.not_null_stg__monzo_transactions_type.e75292d3fe", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect type\nfrom billiam.staging.monzo_transactions\nwhere type is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-04T05:47:49.683231Z", "completed_at": "2024-05-04T05:47:49.687611Z"}, {"name": "execute", "started_at": "2024-05-04T05:47:49.688841Z", "completed_at": "2024-05-04T05:47:49.688846Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0077381134033203125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.billiam_database.unique_stg__monzo_transactions_transaction_id.504c465268", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    transaction_id as unique_field,\n    count(*) as n_records\n\nfrom billiam.staging.monzo_transactions\nwhere transaction_id is not null\ngroup by transaction_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-04T05:47:49.692291Z", "completed_at": "2024-05-04T05:47:49.696830Z"}, {"name": "execute", "started_at": "2024-05-04T05:47:49.697996Z", "completed_at": "2024-05-04T05:47:49.698001Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0078029632568359375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.billiam_database.not_null_work_absences_absence_date.6df00c466e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect absence_date\nfrom billiam.seeds.work_absences\nwhere absence_date is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-04T05:47:49.701377Z", "completed_at": "2024-05-04T05:47:49.705696Z"}, {"name": "execute", "started_at": "2024-05-04T05:47:49.706869Z", "completed_at": "2024-05-04T05:47:49.706873Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007558584213256836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.billiam_database.not_null_work_absences_absence_reason.39f7511d73", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect absence_reason\nfrom billiam.seeds.work_absences\nwhere absence_reason is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-04T05:47:49.710241Z", "completed_at": "2024-05-04T05:47:49.716426Z"}, {"name": "execute", "started_at": "2024-05-04T05:47:49.717557Z", "completed_at": "2024-05-04T05:47:49.717561Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009449958801269531, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.billiam_database.not_null_work_absences_hours.ac1cd2c5d2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect hours\nfrom billiam.seeds.work_absences\nwhere hours is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-04T05:47:49.720957Z", "completed_at": "2024-05-04T05:47:49.725212Z"}, {"name": "execute", "started_at": "2024-05-04T05:47:49.726382Z", "completed_at": "2024-05-04T05:47:49.726386Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007512569427490234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.billiam_database.unique_work_absences_absence_date.50507b904f", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    absence_date as unique_field,\n    count(*) as n_records\n\nfrom billiam.seeds.work_absences\nwhere absence_date is not null\ngroup by absence_date\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-04T05:47:49.729923Z", "completed_at": "2024-05-04T05:47:49.771963Z"}, {"name": "execute", "started_at": "2024-05-04T05:47:49.773124Z", "completed_at": "2024-05-04T05:47:49.773130Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.04826927185058594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.billiam_database.pl__working_hours", "compiled": true, "compiled_code": "\n\n\n\n    with recursive\n    seeds_work_hours as (\n        select \n          /* no columns returned from star() macro */\n        from billiam.seeds.work_hours\n    ),\n    seeds_work_absences as (\n        select \n          /* no columns returned from star() macro */\n        from billiam.seeds.work_absences\n    ),\n\ndates (week_starting) as (\n    -- noqa: disable=LT02\n        select date_trunc('week', (select min(from_date) from seeds_work_hours))\n    union all\n        select week_starting + interval '1 week'\n        from dates\n        where week_starting < current_date - interval '1 week'\n    -- noqa: enable=LT02\n),\n\nscheduled_hours as (\n    select\n        from_date,\n        to_date,\n        (0  -- noqa: LT02\n            + sunday\n            + monday\n            + tuesday\n            + wednesday\n            + thursday\n            + friday\n            + saturday\n        ) as scheduled_hours\n    from seeds_work_hours\n),\n\nabsence_hours as (\n    select\n        date_trunc('week', absence_date) as week_starting,\n        sum(hours) as absence_hours\n    from seeds_work_absences\n    group by all\n),\n\nall_hours as (\n    select\n        dates.week_starting,\n        coalesce(scheduled_hours.scheduled_hours, 0) as scheduled_hours,\n        coalesce(absence_hours.absence_hours, 0) as absence_hours\n    from dates\n        left join scheduled_hours\n            on dates.week_starting between scheduled_hours.from_date and scheduled_hours.to_date\n        left join absence_hours\n            using (week_starting)\n),\n\nfinal as (\n    select\n        week_starting,\n        scheduled_hours,\n        absence_hours,\n        scheduled_hours - absence_hours as expected_working_hours\n    from all_hours\n    order by week_starting\n)\n\nselect * from final", "relation_name": "billiam.presentation.working_hours"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-04T05:47:49.779487Z", "completed_at": "2024-05-04T05:47:49.789376Z"}, {"name": "execute", "started_at": "2024-05-04T05:47:49.790605Z", "completed_at": "2024-05-04T05:47:49.790610Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01327204704284668, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.billiam_database.dbt_utils_unique_combination_of_columns_work_hours_company__from_date.858d4a1809", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        company, from_date\n    from billiam.seeds.work_hours\n    group by company, from_date\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-04T05:47:49.794127Z", "completed_at": "2024-05-04T05:47:49.799995Z"}, {"name": "execute", "started_at": "2024-05-04T05:47:49.801139Z", "completed_at": "2024-05-04T05:47:49.801143Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009238958358764648, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.billiam_database.not_null_work_hours_company.1e9ed15af3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect company\nfrom billiam.seeds.work_hours\nwhere company is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-04T05:47:49.804561Z", "completed_at": "2024-05-04T05:47:49.808840Z"}, {"name": "execute", "started_at": "2024-05-04T05:47:49.810047Z", "completed_at": "2024-05-04T05:47:49.810051Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007576704025268555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.billiam_database.not_null_work_hours_friday.4c6cc1eb4d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect friday\nfrom billiam.seeds.work_hours\nwhere friday is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-04T05:47:49.813487Z", "completed_at": "2024-05-04T05:47:49.817839Z"}, {"name": "execute", "started_at": "2024-05-04T05:47:49.818982Z", "completed_at": "2024-05-04T05:47:49.818986Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007599830627441406, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.billiam_database.not_null_work_hours_from_date.f8a3ee1c64", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect from_date\nfrom billiam.seeds.work_hours\nwhere from_date is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-04T05:47:49.822447Z", "completed_at": "2024-05-04T05:47:49.826769Z"}, {"name": "execute", "started_at": "2024-05-04T05:47:49.827915Z", "completed_at": "2024-05-04T05:47:49.827919Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0076656341552734375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.billiam_database.not_null_work_hours_monday.57b0e45d4a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect monday\nfrom billiam.seeds.work_hours\nwhere monday is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-04T05:47:49.831417Z", "completed_at": "2024-05-04T05:47:49.835548Z"}, {"name": "execute", "started_at": "2024-05-04T05:47:49.836702Z", "completed_at": "2024-05-04T05:47:49.836706Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0074462890625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.billiam_database.not_null_work_hours_saturday.c91fbd0279", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect saturday\nfrom billiam.seeds.work_hours\nwhere saturday is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-04T05:47:49.840373Z", "completed_at": "2024-05-04T05:47:49.844891Z"}, {"name": "execute", "started_at": "2024-05-04T05:47:49.846079Z", "completed_at": "2024-05-04T05:47:49.846083Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007880449295043945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.billiam_database.not_null_work_hours_sunday.808d321779", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sunday\nfrom billiam.seeds.work_hours\nwhere sunday is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-04T05:47:49.849618Z", "completed_at": "2024-05-04T05:47:49.854376Z"}, {"name": "execute", "started_at": "2024-05-04T05:47:49.855517Z", "completed_at": "2024-05-04T05:47:49.855523Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00814509391784668, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.billiam_database.not_null_work_hours_thursday.fcc7f8a5f8", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect thursday\nfrom billiam.seeds.work_hours\nwhere thursday is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-04T05:47:49.859028Z", "completed_at": "2024-05-04T05:47:49.865852Z"}, {"name": "execute", "started_at": "2024-05-04T05:47:49.867003Z", "completed_at": "2024-05-04T05:47:49.867008Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.010158538818359375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.billiam_database.not_null_work_hours_to_date.1ae3e96692", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect to_date\nfrom billiam.seeds.work_hours\nwhere to_date is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-04T05:47:49.870461Z", "completed_at": "2024-05-04T05:47:49.874874Z"}, {"name": "execute", "started_at": "2024-05-04T05:47:49.875994Z", "completed_at": "2024-05-04T05:47:49.875999Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007737398147583008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.billiam_database.not_null_work_hours_tuesday.5f6a123637", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect tuesday\nfrom billiam.seeds.work_hours\nwhere tuesday is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-04T05:47:49.879454Z", "completed_at": "2024-05-04T05:47:49.883715Z"}, {"name": "execute", "started_at": "2024-05-04T05:47:49.884836Z", "completed_at": "2024-05-04T05:47:49.884840Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007553577423095703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.billiam_database.not_null_work_hours_wednesday.559ef57f09", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect wednesday\nfrom billiam.seeds.work_hours\nwhere wednesday is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-04T05:47:49.888460Z", "completed_at": "2024-05-04T05:47:49.930737Z"}, {"name": "execute", "started_at": "2024-05-04T05:47:49.931893Z", "completed_at": "2024-05-04T05:47:49.931898Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.048635005950927734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.billiam_database.int__transaction_items", "compiled": true, "compiled_code": "\n\n\n\n    with recursive\n    stg_finances as (\n        select \n          /* no columns returned from star() macro */\n        from billiam.staging.finances\n    ),\n    int_transactions as (\n        select \n          /* no columns returned from star() macro */\n        from billiam.intermediate.transactions\n    ),\n\nfinal as (\n    select\n        stg_finances.row_id,\n        stg_finances.transaction_date,\n        stg_finances.transaction_id,\n        stg_finances.item,\n        stg_finances.\"cost\",\n        stg_finances.category,\n        stg_finances.counterparty,\n        stg_finances.exclusion_flag,\n    from stg_finances\n        semi join int_transactions using (transaction_id)\n    order by stg_finances.row_id\n)\n\nselect * from final", "relation_name": "billiam.intermediate.transaction_items"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-04T05:47:49.938668Z", "completed_at": "2024-05-04T05:47:49.954197Z"}, {"name": "execute", "started_at": "2024-05-04T05:47:49.955389Z", "completed_at": "2024-05-04T05:47:49.955393Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.019217252731323242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.billiam_database.dbt_expectations_expect_column_values_to_not_match_like_pattern_int__transactions_counterparty___.9e9aa7b732", "compiled": true, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \ncounterparty not like '%||%'\n as expression\n\n\n    from billiam.intermediate.transactions\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-04T05:47:49.958898Z", "completed_at": "2024-05-04T05:47:49.963246Z"}, {"name": "execute", "started_at": "2024-05-04T05:47:49.964386Z", "completed_at": "2024-05-04T05:47:49.964390Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007601737976074219, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.billiam_database.not_null_int__transactions_cost.a8611301e0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect cost\nfrom billiam.intermediate.transactions\nwhere cost is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-04T05:47:49.967898Z", "completed_at": "2024-05-04T05:47:49.972397Z"}, {"name": "execute", "started_at": "2024-05-04T05:47:49.973542Z", "completed_at": "2024-05-04T05:47:49.973546Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007805347442626953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.billiam_database.not_null_int__transactions_counterparty.025e0c3eba", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect counterparty\nfrom billiam.intermediate.transactions\nwhere counterparty is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-04T05:47:49.977047Z", "completed_at": "2024-05-04T05:47:49.981561Z"}, {"name": "execute", "started_at": "2024-05-04T05:47:49.982739Z", "completed_at": "2024-05-04T05:47:49.982743Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007864952087402344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.billiam_database.not_null_int__transactions_item_count.100a08d5ac", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect item_count\nfrom billiam.intermediate.transactions\nwhere item_count is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-04T05:47:49.986188Z", "completed_at": "2024-05-04T05:47:49.990471Z"}, {"name": "execute", "started_at": "2024-05-04T05:47:49.991606Z", "completed_at": "2024-05-04T05:47:49.991610Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007573604583740234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.billiam_database.not_null_int__transactions_transaction_id.e2594cdecd", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_id\nfrom billiam.intermediate.transactions\nwhere transaction_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-04T05:47:49.995073Z", "completed_at": "2024-05-04T05:47:49.999442Z"}, {"name": "execute", "started_at": "2024-05-04T05:47:50.000581Z", "completed_at": "2024-05-04T05:47:50.000585Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0076367855072021484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.billiam_database.unique_int__transactions_transaction_id.9091bfb381", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    transaction_id as unique_field,\n    count(*) as n_records\n\nfrom billiam.intermediate.transactions\nwhere transaction_id is not null\ngroup by transaction_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-04T05:47:50.004122Z", "completed_at": "2024-05-04T05:47:50.049046Z"}, {"name": "execute", "started_at": "2024-05-04T05:47:50.050286Z", "completed_at": "2024-05-04T05:47:50.050293Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.05130267143249512, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.billiam_database.pl__daily_metrics", "compiled": true, "compiled_code": "\n\n/*\n    Will break this down into smaller models later\n*/\n\n\n\n    with recursive\n    src_transactions as (\n        select \n          /* no columns returned from star() macro */\n        from billiam.intermediate.transaction_items\n    ),\n    src_tracker as (\n        select \n          /* no columns returned from star() macro */\n        from billiam.staging.daily_tracker\n    ),\n\ndate_dim as (\n    -- noqa: disable=LT02\n        select '2018-01-01'::date as metric_date\n    union all\n        select metric_date + interval 1 day\n        from date_dim\n        where metric_date < current_date\n    -- noqa: enable=LT02\n),\n\ndaily_transactions as (\n    select\n        transaction_date as metric_date,\n        sum(\"cost\") as total_cost,\n        sum(\"cost\") filter (where category not in ('Bills', 'Council Tax', 'Rent', 'Wage')) as non_essential_cost,\n        within(round(100.0 * non_essential_cost / total_cost, 4), 0, 100) as non_essential_cost_proportion,\n    from src_transactions\n    where not exclusion_flag\n    group by transaction_date\n),\n\ndaily_work as (\n    select\n        date_time::date as metric_date,\n        sum(minutes) as total_working_time,\n        sum(minutes) filter (where project = 'Meetings') as meeting_time,\n        round(100.0 * meeting_time / total_working_time, 4) as meeting_proportion,\n        round(100.0 * meeting_time / least(total_working_time, 7.5 * 60), 4) as working_day_meeting_proportion,\n    from src_tracker\n    group by date_time::date\n),\n\nfinal as (\n    select\n        date_dim.metric_date,\n\n        coalesce(daily_transactions.total_cost, 0)::decimal(18, 3) as total_cost,\n        coalesce(daily_transactions.non_essential_cost, 0)::decimal(18, 3) as non_essential_cost,\n        coalesce(daily_transactions.non_essential_cost_proportion, 0)::decimal(8, 4) as non_essential_cost_proportion,\n        coalesce(daily_work.total_working_time, 0)::int as total_working_time,\n        coalesce(daily_work.meeting_time, 0)::int as meeting_time,\n        coalesce(daily_work.meeting_proportion, 0)::decimal(8, 4) as meeting_proportion,\n        coalesce(daily_work.working_day_meeting_proportion, 0)::decimal(8, 4) as working_day_meeting_proportion,\n    from date_dim\n        left join daily_transactions using (metric_date)\n        left join daily_work using (metric_date)\n    order by date_dim.metric_date\n)\n\nselect * from final", "relation_name": "billiam.presentation.daily_metrics"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-04T05:47:50.056760Z", "completed_at": "2024-05-04T05:47:50.061227Z"}, {"name": "execute", "started_at": "2024-05-04T05:47:50.062398Z", "completed_at": "2024-05-04T05:47:50.062402Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00775456428527832, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.billiam_database.not_null_int__transaction_items_category.39e832ce25", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect category\nfrom billiam.intermediate.transaction_items\nwhere category is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-04T05:47:50.065838Z", "completed_at": "2024-05-04T05:47:50.070433Z"}, {"name": "execute", "started_at": "2024-05-04T05:47:50.071581Z", "completed_at": "2024-05-04T05:47:50.071587Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007900476455688477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.billiam_database.not_null_int__transaction_items_cost.f2ca12359d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect cost\nfrom billiam.intermediate.transaction_items\nwhere cost is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-04T05:47:50.075076Z", "completed_at": "2024-05-04T05:47:50.079750Z"}, {"name": "execute", "started_at": "2024-05-04T05:47:50.080887Z", "completed_at": "2024-05-04T05:47:50.080892Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008002996444702148, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.billiam_database.not_null_int__transaction_items_counterparty.a63d6c9f1d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect counterparty\nfrom billiam.intermediate.transaction_items\nwhere counterparty is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-04T05:47:50.084468Z", "completed_at": "2024-05-04T05:47:50.089178Z"}, {"name": "execute", "started_at": "2024-05-04T05:47:50.090365Z", "completed_at": "2024-05-04T05:47:50.090370Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008082866668701172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.billiam_database.not_null_int__transaction_items_exclusion_flag.405d57b4a7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect exclusion_flag\nfrom billiam.intermediate.transaction_items\nwhere exclusion_flag is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-04T05:47:50.093837Z", "completed_at": "2024-05-04T05:47:50.100390Z"}, {"name": "execute", "started_at": "2024-05-04T05:47:50.101531Z", "completed_at": "2024-05-04T05:47:50.101536Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009953737258911133, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.billiam_database.not_null_int__transaction_items_item.218672e7d8", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect item\nfrom billiam.intermediate.transaction_items\nwhere item is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-04T05:47:50.105027Z", "completed_at": "2024-05-04T05:47:50.109329Z"}, {"name": "execute", "started_at": "2024-05-04T05:47:50.110522Z", "completed_at": "2024-05-04T05:47:50.110527Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0075893402099609375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.billiam_database.not_null_int__transaction_items_row_id.640af8bdb0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect row_id\nfrom billiam.intermediate.transaction_items\nwhere row_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-04T05:47:50.113990Z", "completed_at": "2024-05-04T05:47:50.118295Z"}, {"name": "execute", "started_at": "2024-05-04T05:47:50.119433Z", "completed_at": "2024-05-04T05:47:50.119438Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0076296329498291016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.billiam_database.not_null_int__transaction_items_transaction_date.2c50f9a0a5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_date\nfrom billiam.intermediate.transaction_items\nwhere transaction_date is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-04T05:47:50.122932Z", "completed_at": "2024-05-04T05:47:50.127274Z"}, {"name": "execute", "started_at": "2024-05-04T05:47:50.128399Z", "completed_at": "2024-05-04T05:47:50.128404Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0077130794525146484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.billiam_database.not_null_int__transaction_items_transaction_id.59a446d3ec", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_id\nfrom billiam.intermediate.transaction_items\nwhere transaction_id is null\n\n\n", "relation_name": null}], "elapsed_time": 1.149310827255249, "args": {"empty_catalog": false, "log_format": "default", "warn_error_options": {"include": [], "exclude": []}, "quiet": false, "indirect_selection": "eager", "log_level_file": "debug", "partial_parse_file_diff": true, "print": true, "show_resource_report": false, "version_check": true, "populate_cache": true, "send_anonymous_usage_stats": true, "which": "generate", "write_json": true, "enable_legacy_logger": false, "cache_selected_only": false, "static": false, "profiles_dir": "billiam_database/", "defer": false, "favor_state": false, "introspect": true, "select": [], "macro_debugging": false, "project_dir": "billiam_database/", "use_experimental_parser": true, "log_file_max_bytes": 10485760, "log_format_file": "default", "compile": true, "exclude": [], "log_level": "info", "partial_parse": true, "static_parser": true, "vars": {}, "printer_width": 80, "use_colors": true, "invocation_command": "dbt docs generate", "strict_mode": false, "use_colors_file": true, "log_path": "billiam_database/logs"}}