{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v5.json", "dbt_version": "1.7.13", "generated_at": "2024-04-24T12:56:30.822155Z", "invocation_id": "d5e8e80d-3541-44a7-90c5-545307ffe281", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-24T12:56:30.062104Z", "completed_at": "2024-04-24T12:56:30.079710Z"}, {"name": "execute", "started_at": "2024-04-24T12:56:30.080936Z", "completed_at": "2024-04-24T12:56:30.080949Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.021361827850341797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.billiam_database.stg__daily_tracker", "compiled": true, "compiled_code": "\n\n\nWITH\n    src_tracker AS (\n        SELECT *\n        FROM 'billiam_database/models/source/daily_tracker.csv'\n    ),\n\nfinal as (\n    -- noqa: disable=ST06\n    select\n        date_time::timestamp as date_time,\n        trim(\"task\") as project,\n        coalesce(trim(detail), '') as detail,\n        \"interval\"::integer as minutes,\n        trim(company) as company\n    from src_tracker\n    -- noqa: enable=ST06\n)\n\nselect * from final", "relation_name": "billiam.staging.daily_tracker"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-24T12:56:30.084797Z", "completed_at": "2024-04-24T12:56:30.088984Z"}, {"name": "execute", "started_at": "2024-04-24T12:56:30.090160Z", "completed_at": "2024-04-24T12:56:30.090167Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007590532302856445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.billiam_database.stg__finances", "compiled": true, "compiled_code": "\n\n\nWITH\n    src_finances AS (\n        SELECT *\n        FROM 'billiam_database/models/source/finances.csv'\n    ),\n\nfinal as (\n    -- noqa: disable=ST06, RF06\n    select\n        row_number() over () as row_id,  /* Just for maintaining uniqueness */\n        \"Transaction\"::int as transaction_id,\n        \"Date\"::date as transaction_date,\n        trim(\"Item\") as item,\n        translate(\"Cost\", '\u00a3,', '')::decimal(18, 2) as \"cost\",\n        trim(\"Category\") as category,\n        trim(\"Retailer\") as counterparty,\n        trim(\"Payment Method\") as payment_method,  -- noqa: RF05\n        coalesce(\"Exclusion\"::bool, false) as exclusion_flag,\n        \"Reimbursement Transaction\"::int as reimbursement_transaction_id  -- noqa: RF05\n    from src_finances\n    -- noqa: enable=ST06, RF06\n)\n\nselect * from final", "relation_name": "billiam.staging.finances"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-24T12:56:30.093956Z", "completed_at": "2024-04-24T12:56:30.097962Z"}, {"name": "execute", "started_at": "2024-04-24T12:56:30.099182Z", "completed_at": "2024-04-24T12:56:30.099188Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007395505905151367, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.billiam_database.stg__monzo_transactions", "compiled": true, "compiled_code": "\n\n\nWITH\n    src_monzo_transactions AS (\n        SELECT *\n        FROM 'billiam_database/models/source/monzo_transactions.csv'\n    ),\n\nfinal as (\n    -- noqa: disable=ST06, RF06\n    select\n        \"Transaction ID\" as transaction_id,  -- noqa: RF05\n        \"Date\"::date as transaction_date,\n        \"Time\"::time as transaction_time,\n        trim(\"Type\") as \"type\",\n        trim(\"Name\") as counterparty,\n        \"Emoji\" as emoji,\n        trim(\"Category\") as category,\n        -\"Amount\"::decimal(18, 2) as \"cost\",\n        \"Currency\" as currency,\n        -\"Local amount\"::decimal(18, 2) as local_cost,  -- noqa: RF05\n        \"Local currency\" as local_currency,  -- noqa: RF05\n        \"Notes and #tags\" as notes,  -- noqa: RF05\n        \"Address\" as address,\n        trim(\"Receipt\") as receipt,\n        trim(\"Description\") as description,\n        \"Category split\" as category_split,  -- noqa: RF05\n    from src_monzo_transactions\n    -- noqa: enable=ST06, RF06\n)\n\nselect * from final", "relation_name": "billiam.staging.monzo_transactions"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-24T12:56:30.102793Z", "completed_at": "2024-04-24T12:56:30.105671Z"}, {"name": "execute", "started_at": "2024-04-24T12:56:30.106791Z", "completed_at": "2024-04-24T12:56:30.106798Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0061244964599609375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "operation.billiam_database.billiam_database-on-run-end-0", "compiled": true, "compiled_code": "", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-24T12:56:30.110213Z", "completed_at": "2024-04-24T12:56:30.114479Z"}, {"name": "execute", "started_at": "2024-04-24T12:56:30.115632Z", "completed_at": "2024-04-24T12:56:30.115637Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007508993148803711, "adapter_response": {}, "message": null, "failures": null, "unique_id": "operation.billiam_database.billiam_database-on-run-start-0", "compiled": true, "compiled_code": "\n    \n    \n    \n    CREATE OR REPLACE MACRO within(expr, lower_bound, upper_bound) AS\n        GREATEST(LEAST(expr, upper_bound), lower_bound)\n    ;\n;\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-24T12:56:30.119016Z", "completed_at": "2024-04-24T12:56:30.234846Z"}, {"name": "execute", "started_at": "2024-04-24T12:56:30.236075Z", "completed_at": "2024-04-24T12:56:30.236085Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.12233567237854004, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.billiam_database.pl__daily_tracker", "compiled": true, "compiled_code": "\n\n\nWITH\n    stg_tracker AS (\n        SELECT \n          /* no columns returned from star() macro */\n        FROM billiam.staging.daily_tracker\n    ),\n\nfinal as (\n    select\n        date_time,\n        project,\n        detail,\n        minutes,\n        company\n    from stg_tracker\n)\n\nselect * from final", "relation_name": "billiam.presentation.daily_tracker"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-24T12:56:30.242997Z", "completed_at": "2024-04-24T12:56:30.275592Z"}, {"name": "execute", "started_at": "2024-04-24T12:56:30.276788Z", "completed_at": "2024-04-24T12:56:30.276797Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.03904438018798828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.billiam_database.pl__task_details", "compiled": true, "compiled_code": "\n\n\n-- noqa: disable=PRS\n-- The `interval` column in `stg__daily_tracker` can't be parsed\nWITH\n    src_tracker AS (\n        SELECT \n          /* no columns returned from star() macro */\n        FROM billiam.staging.daily_tracker\n    ),\n-- noqa: enable=PRS\n\nfinal as (\n    -- noqa: disable=ST06\n    select\n        grouping_id(project, detail)::integer as group_id,\n        case grouping_id(project, detail)\n            when 0 then 'Task and detail'\n            when 1 then 'Task only'\n        end as group_description,\n        project,\n        coalesce(detail, '') as detail,\n\n        count(*)::integer as total_records,\n        sum(minutes)::integer as total_time,\n        min(date_time) as start_time,\n        max(date_time) as end_time,\n    from src_tracker\n    -- noqa: disable=CP02, RF06, PRS\n    -- SQLFluff thinks that `GROUPING SETS` is a column name?!\n    group by grouping sets (\n        (project, detail),\n        (project)\n    )\n    -- noqa: enable=CP02, RF06, PRS\n)\n\nselect * from final", "relation_name": "billiam.presentation.task_details"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-24T12:56:30.283552Z", "completed_at": "2024-04-24T12:56:30.296951Z"}, {"name": "execute", "started_at": "2024-04-24T12:56:30.298204Z", "completed_at": "2024-04-24T12:56:30.298212Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01685190200805664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.billiam_database.accepted_values_stg__daily_tracker_company__TSB__Jaja__Allica__Sainsbury_s.9489542842", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        company as value_field,\n        count(*) as n_records\n\n    from billiam.staging.daily_tracker\n    group by company\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'TSB','Jaja','Allica','Sainsbury''s'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-24T12:56:30.301810Z", "completed_at": "2024-04-24T12:56:30.310629Z"}, {"name": "execute", "started_at": "2024-04-24T12:56:30.311789Z", "completed_at": "2024-04-24T12:56:30.311794Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.012157440185546875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.billiam_database.not_null_stg__daily_tracker_company.f15160b208", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect company\nfrom billiam.staging.daily_tracker\nwhere company is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-24T12:56:30.315256Z", "completed_at": "2024-04-24T12:56:30.321339Z"}, {"name": "execute", "started_at": "2024-04-24T12:56:30.322489Z", "completed_at": "2024-04-24T12:56:30.322493Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009468555450439453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.billiam_database.not_null_stg__daily_tracker_date_time.107b919c02", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date_time\nfrom billiam.staging.daily_tracker\nwhere date_time is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-24T12:56:30.326404Z", "completed_at": "2024-04-24T12:56:30.330597Z"}, {"name": "execute", "started_at": "2024-04-24T12:56:30.331739Z", "completed_at": "2024-04-24T12:56:30.331744Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007487058639526367, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.billiam_database.not_null_stg__daily_tracker_detail.1496e623bf", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect detail\nfrom billiam.staging.daily_tracker\nwhere detail is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-24T12:56:30.335172Z", "completed_at": "2024-04-24T12:56:30.339435Z"}, {"name": "execute", "started_at": "2024-04-24T12:56:30.340586Z", "completed_at": "2024-04-24T12:56:30.340591Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007534027099609375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.billiam_database.not_null_stg__daily_tracker_minutes.d3002618cb", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect minutes\nfrom billiam.staging.daily_tracker\nwhere minutes is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-24T12:56:30.343989Z", "completed_at": "2024-04-24T12:56:30.348292Z"}, {"name": "execute", "started_at": "2024-04-24T12:56:30.349464Z", "completed_at": "2024-04-24T12:56:30.349468Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007550477981567383, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.billiam_database.not_null_stg__daily_tracker_project.ac347f4101", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect project\nfrom billiam.staging.daily_tracker\nwhere project is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-24T12:56:30.352847Z", "completed_at": "2024-04-24T12:56:30.359248Z"}, {"name": "execute", "started_at": "2024-04-24T12:56:30.360430Z", "completed_at": "2024-04-24T12:56:30.360434Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009713172912597656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.billiam_database.unique_stg__daily_tracker_date_time.d1b1f0cab2", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    date_time as unique_field,\n    count(*) as n_records\n\nfrom billiam.staging.daily_tracker\nwhere date_time is not null\ngroup by date_time\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-24T12:56:30.363932Z", "completed_at": "2024-04-24T12:56:30.395286Z"}, {"name": "execute", "started_at": "2024-04-24T12:56:30.396448Z", "completed_at": "2024-04-24T12:56:30.396453Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.03738260269165039, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.billiam_database.int__transactions", "compiled": true, "compiled_code": "\n\n\nWITH\n    stg_finances AS (\n        SELECT \n          /* no columns returned from star() macro */\n        FROM billiam.staging.finances\n    ),\n\nfinal as (\n    select\n        transaction_id,\n        transaction_date,\n        round(sum(\"cost\"), 2) as \"cost\",\n        count(*) as item_count,\n        group_concat(distinct counterparty, '||') as counterparty,\n    from stg_finances\n    group by transaction_id, transaction_date\n    having not (count(*) = 2 and round(sum(\"cost\"), 2) = 0)  /* Exclude credit repayment transactions */\n    order by transaction_id\n)\n\nselect * from final", "relation_name": "billiam.intermediate.transactions"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-24T12:56:30.402965Z", "completed_at": "2024-04-24T12:56:30.408728Z"}, {"name": "execute", "started_at": "2024-04-24T12:56:30.409917Z", "completed_at": "2024-04-24T12:56:30.409921Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009296655654907227, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.billiam_database.not_null_stg__finances_category.47765b77f9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect category\nfrom billiam.staging.finances\nwhere category is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-24T12:56:30.413394Z", "completed_at": "2024-04-24T12:56:30.417685Z"}, {"name": "execute", "started_at": "2024-04-24T12:56:30.418823Z", "completed_at": "2024-04-24T12:56:30.418828Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007569789886474609, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.billiam_database.not_null_stg__finances_cost.437ec48b36", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect cost\nfrom billiam.staging.finances\nwhere cost is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-24T12:56:30.422242Z", "completed_at": "2024-04-24T12:56:30.426531Z"}, {"name": "execute", "started_at": "2024-04-24T12:56:30.427682Z", "completed_at": "2024-04-24T12:56:30.427687Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007553815841674805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.billiam_database.not_null_stg__finances_counterparty.3abba3e86c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect counterparty\nfrom billiam.staging.finances\nwhere counterparty is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-24T12:56:30.431106Z", "completed_at": "2024-04-24T12:56:30.435517Z"}, {"name": "execute", "started_at": "2024-04-24T12:56:30.436665Z", "completed_at": "2024-04-24T12:56:30.436670Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007737874984741211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.billiam_database.not_null_stg__finances_exclusion_flag.ed5156eebb", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect exclusion_flag\nfrom billiam.staging.finances\nwhere exclusion_flag is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-24T12:56:30.440157Z", "completed_at": "2024-04-24T12:56:30.444544Z"}, {"name": "execute", "started_at": "2024-04-24T12:56:30.445725Z", "completed_at": "2024-04-24T12:56:30.445729Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007695436477661133, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.billiam_database.not_null_stg__finances_item.58714b3ccc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect item\nfrom billiam.staging.finances\nwhere item is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-24T12:56:30.449170Z", "completed_at": "2024-04-24T12:56:30.453410Z"}, {"name": "execute", "started_at": "2024-04-24T12:56:30.454558Z", "completed_at": "2024-04-24T12:56:30.454562Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0075533390045166016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.billiam_database.not_null_stg__finances_payment_method.3423839e55", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect payment_method\nfrom billiam.staging.finances\nwhere payment_method is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-24T12:56:30.458198Z", "completed_at": "2024-04-24T12:56:30.462391Z"}, {"name": "execute", "started_at": "2024-04-24T12:56:30.463541Z", "completed_at": "2024-04-24T12:56:30.463545Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00771331787109375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.billiam_database.not_null_stg__finances_row_id.b35b6b6055", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect row_id\nfrom billiam.staging.finances\nwhere row_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-24T12:56:30.466985Z", "completed_at": "2024-04-24T12:56:30.472718Z"}, {"name": "execute", "started_at": "2024-04-24T12:56:30.473896Z", "completed_at": "2024-04-24T12:56:30.473900Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009021997451782227, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.billiam_database.not_null_stg__finances_transaction_date.c4a917f991", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_date\nfrom billiam.staging.finances\nwhere transaction_date is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-24T12:56:30.477283Z", "completed_at": "2024-04-24T12:56:30.481666Z"}, {"name": "execute", "started_at": "2024-04-24T12:56:30.482828Z", "completed_at": "2024-04-24T12:56:30.482832Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007658958435058594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.billiam_database.not_null_stg__finances_transaction_id.a4c3a99b45", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_id\nfrom billiam.staging.finances\nwhere transaction_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-24T12:56:30.486275Z", "completed_at": "2024-04-24T12:56:30.494720Z"}, {"name": "execute", "started_at": "2024-04-24T12:56:30.495890Z", "completed_at": "2024-04-24T12:56:30.495895Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.011808156967163086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.billiam_database.relationships_stg__finances_reimbursement_transaction_id__transaction_id__ref_stg__finances_.ea59af76e0", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select reimbursement_transaction_id as from_field\n    from (select * from billiam.staging.finances where reimbursement_transaction_id IS NOT NULL) dbt_subquery\n    where reimbursement_transaction_id is not null\n),\n\nparent as (\n    select transaction_id as to_field\n    from billiam.staging.finances\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-24T12:56:30.499319Z", "completed_at": "2024-04-24T12:56:30.503718Z"}, {"name": "execute", "started_at": "2024-04-24T12:56:30.504878Z", "completed_at": "2024-04-24T12:56:30.504883Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007689714431762695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.billiam_database.unique_stg__finances_row_id.eaaeda8cae", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    row_id as unique_field,\n    count(*) as n_records\n\nfrom billiam.staging.finances\nwhere row_id is not null\ngroup by row_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-24T12:56:30.508390Z", "completed_at": "2024-04-24T12:56:30.552055Z"}, {"name": "execute", "started_at": "2024-04-24T12:56:30.553262Z", "completed_at": "2024-04-24T12:56:30.553267Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.05002999305725098, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.billiam_database.assert__monzo_transactions_reconcile__tfl", "compiled": true, "compiled_code": "\n\n\n\n\nWITH RECURSIVE\n    stg_finances AS (\n        SELECT \n          /* no columns returned from star() macro */\n        FROM billiam.staging.finances\n    ),\n    stg_monzo_transactions AS (\n        SELECT \n          /* no columns returned from star() macro */\n        FROM billiam.staging.monzo_transactions\n    ),\n\nmy_txns AS (\n    SELECT\n        transaction_date,\n        SUM(cost)::NUMERIC(18, 2) AS cost,\n    FROM stg_finances\n    WHERE counterparty = 'TfL'\n      AND payment_method = 'Monzo'\n    GROUP BY transaction_date\n),\nmonzo_txns AS (\n    SELECT\n        transaction_date,\n        SUM(cost)::NUMERIC(18, 2) AS cost,\n    FROM stg_monzo_transactions\n    WHERE counterparty = 'Transport for London'\n      AND cost != 0\n    GROUP BY transaction_date\n),\n\ndates AS (\n        SELECT MIN(transaction_date) AS transaction_date\n        FROM my_txns\n    UNION ALL\n        SELECT transaction_date + INTERVAL 1 DAY\n        FROM dates\n        WHERE transaction_date < CURRENT_DATE\n),\n\njoined AS (\n    SELECT\n        transaction_date,\n        COALESCE(my_txns.cost, 0) AS cost__mine,\n        COALESCE(monzo_txns.cost, 0) AS cost__monzo,\n\n        SUM(cost__mine)  OVER t_date AS running_cost__mine,\n        SUM(cost__monzo) OVER t_date AS running_cost__monzo,\n\n        running_cost__mine = running_cost__monzo AS match_flag\n    FROM dates\n        LEFT JOIN my_txns    USING (transaction_date)\n        LEFT JOIN monzo_txns USING (transaction_date)\n    WINDOW t_date AS (ORDER BY transaction_date)\n)\n\n/*\nFor now, we just match \"close enough\" -- this is because the transactions\nare recorded at different times between the sources _and_ because the\ngrain is different, so it's harder to join them together with integrity.\n\nRemember that the `stg__finances` model records each _journey_, whereas\nthe `stg__monzo_transactions` model records each _transaction_ which can\ncorrespond to several journeys.\n\nWe apply an 80% match threshold to the running total, so if the running\ntotal is out for more than 20% of cases we flag this as a failure.\n*/\nSELECT 1.0 * SUM(match_flag::INT) / COUNT(*) AS match_ratio\nFROM joined\nHAVING match_ratio < 0.80", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-24T12:56:30.559915Z", "completed_at": "2024-04-24T12:56:30.564336Z"}, {"name": "execute", "started_at": "2024-04-24T12:56:30.565523Z", "completed_at": "2024-04-24T12:56:30.565528Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00783681869506836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.billiam_database.not_null_stg__monzo_transactions_transaction_date.ef899ac49c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_date\nfrom billiam.staging.monzo_transactions\nwhere transaction_date is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-24T12:56:30.568954Z", "completed_at": "2024-04-24T12:56:30.573326Z"}, {"name": "execute", "started_at": "2024-04-24T12:56:30.574495Z", "completed_at": "2024-04-24T12:56:30.574499Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007642030715942383, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.billiam_database.not_null_stg__monzo_transactions_transaction_id.c828f70f9a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_id\nfrom billiam.staging.monzo_transactions\nwhere transaction_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-24T12:56:30.577924Z", "completed_at": "2024-04-24T12:56:30.582315Z"}, {"name": "execute", "started_at": "2024-04-24T12:56:30.583472Z", "completed_at": "2024-04-24T12:56:30.583476Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007687807083129883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.billiam_database.not_null_stg__monzo_transactions_transaction_time.dd063588dc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_time\nfrom billiam.staging.monzo_transactions\nwhere transaction_time is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-24T12:56:30.586921Z", "completed_at": "2024-04-24T12:56:30.591166Z"}, {"name": "execute", "started_at": "2024-04-24T12:56:30.592298Z", "completed_at": "2024-04-24T12:56:30.592302Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007470846176147461, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.billiam_database.not_null_stg__monzo_transactions_type.e75292d3fe", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect type\nfrom billiam.staging.monzo_transactions\nwhere type is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-24T12:56:30.595869Z", "completed_at": "2024-04-24T12:56:30.600015Z"}, {"name": "execute", "started_at": "2024-04-24T12:56:30.601193Z", "completed_at": "2024-04-24T12:56:30.601198Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007595539093017578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.billiam_database.unique_stg__monzo_transactions_transaction_id.504c465268", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    transaction_id as unique_field,\n    count(*) as n_records\n\nfrom billiam.staging.monzo_transactions\nwhere transaction_id is not null\ngroup by transaction_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-24T12:56:30.604628Z", "completed_at": "2024-04-24T12:56:30.647308Z"}, {"name": "execute", "started_at": "2024-04-24T12:56:30.648492Z", "completed_at": "2024-04-24T12:56:30.648496Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.04868173599243164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.billiam_database.int__transaction_items", "compiled": true, "compiled_code": "\n\n\nWITH\n    stg_finances AS (\n        SELECT \n          /* no columns returned from star() macro */\n        FROM billiam.staging.finances\n    ),\n    int_transactions AS (\n        SELECT \n          /* no columns returned from star() macro */\n        FROM billiam.intermediate.transactions\n    ),\n\nfinal as (\n    select\n        row_id,\n        transaction_date,\n        transaction_id,\n        item,\n        \"cost\",\n        category,\n        counterparty,\n        exclusion_flag,\n    from stg_finances\n    -- noqa: disable=LT02\n    where transaction_id in (\n        /*\n            Only keep the items for transactions that haven't been filtered out.\n        */\n        select transaction_id\n        from int_transactions\n    )\n    -- noqa: enable=LT02\n    order by row_id\n)\n\nselect * from final", "relation_name": "billiam.intermediate.transaction_items"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-24T12:56:30.654945Z", "completed_at": "2024-04-24T12:56:30.668847Z"}, {"name": "execute", "started_at": "2024-04-24T12:56:30.670096Z", "completed_at": "2024-04-24T12:56:30.670100Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01746368408203125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.billiam_database.dbt_expectations_expect_column_values_to_not_match_like_pattern_int__transactions_counterparty___.9e9aa7b732", "compiled": true, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \ncounterparty not like '%||%'\n as expression\n\n\n    from billiam.intermediate.transactions\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-24T12:56:30.673655Z", "completed_at": "2024-04-24T12:56:30.678047Z"}, {"name": "execute", "started_at": "2024-04-24T12:56:30.679194Z", "completed_at": "2024-04-24T12:56:30.679198Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007760286331176758, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.billiam_database.not_null_int__transactions_cost.a8611301e0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect cost\nfrom billiam.intermediate.transactions\nwhere cost is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-24T12:56:30.682647Z", "completed_at": "2024-04-24T12:56:30.687034Z"}, {"name": "execute", "started_at": "2024-04-24T12:56:30.688178Z", "completed_at": "2024-04-24T12:56:30.688182Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00770115852355957, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.billiam_database.not_null_int__transactions_counterparty.025e0c3eba", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect counterparty\nfrom billiam.intermediate.transactions\nwhere counterparty is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-24T12:56:30.691675Z", "completed_at": "2024-04-24T12:56:30.695892Z"}, {"name": "execute", "started_at": "2024-04-24T12:56:30.697026Z", "completed_at": "2024-04-24T12:56:30.697030Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00750422477722168, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.billiam_database.not_null_int__transactions_item_count.100a08d5ac", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect item_count\nfrom billiam.intermediate.transactions\nwhere item_count is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-24T12:56:30.700476Z", "completed_at": "2024-04-24T12:56:30.706203Z"}, {"name": "execute", "started_at": "2024-04-24T12:56:30.707368Z", "completed_at": "2024-04-24T12:56:30.707372Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009048700332641602, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.billiam_database.not_null_int__transactions_transaction_id.e2594cdecd", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect transaction_id\nfrom billiam.intermediate.transactions\nwhere transaction_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-24T12:56:30.710814Z", "completed_at": "2024-04-24T12:56:30.715047Z"}, {"name": "execute", "started_at": "2024-04-24T12:56:30.716201Z", "completed_at": "2024-04-24T12:56:30.716205Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007572650909423828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.billiam_database.unique_int__transactions_transaction_id.9091bfb381", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    transaction_id as unique_field,\n    count(*) as n_records\n\nfrom billiam.intermediate.transactions\nwhere transaction_id is not null\ngroup by transaction_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-24T12:56:30.719652Z", "completed_at": "2024-04-24T12:56:30.761664Z"}, {"name": "execute", "started_at": "2024-04-24T12:56:30.762839Z", "completed_at": "2024-04-24T12:56:30.762843Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.048136234283447266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.billiam_database.pl__daily_metrics", "compiled": true, "compiled_code": "\n\n/*\n    Will break this down into smaller models later\n*/\n\n\n-- noqa: disable=PRS\n-- The `interval` column in `stg__daily_tracker` can't be parsed\nWITH RECURSIVE\n    src_transactions AS (\n        SELECT \n          /* no columns returned from star() macro */\n        FROM billiam.intermediate.transaction_items\n    ),\n    src_tracker AS (\n        SELECT \n          /* no columns returned from star() macro */\n        FROM billiam.staging.daily_tracker\n    ),\n-- noqa: enable=PRS\n\ndate_dim as (\n    -- noqa: disable=LT02\n        select '2018-01-01'::date as metric_date\n    union all\n        select metric_date + interval 1 day\n        from date_dim\n        where metric_date < current_date\n    -- noqa: enable=LT02\n),\n\ndaily_transactions as (\n    select\n        transaction_date as metric_date,\n        sum(\"cost\") as total_cost,\n        sum(\"cost\") filter (where category not in ('Bills', 'Council Tax', 'Rent', 'Wage')) as non_essential_cost,\n        within(round(100.0 * non_essential_cost / total_cost, 4), 0, 100) as non_essential_cost_proportion,\n    from src_transactions\n    where not exclusion_flag\n    group by transaction_date\n),  -- noqa: LT08\ndaily_work as (\n    select\n        date_time::date as metric_date,\n        sum(minutes) as total_working_time,\n        sum(minutes) filter (where project in ('Meetings', 'Catch Up')) as meeting_time,\n        round(100.0 * meeting_time / total_working_time, 4) as meeting_proportion,\n        round(100.0 * meeting_time / least(total_working_time, 7.5 * 60), 4) as working_day_meeting_proportion,\n    from src_tracker\n    group by date_time::date\n),\n\nfinal as (\n    select\n        date_dim.metric_date,\n\n        coalesce(daily_transactions.total_cost, 0)::decimal(18, 3) as total_cost,\n        coalesce(daily_transactions.non_essential_cost, 0)::decimal(18, 3) as non_essential_cost,\n        coalesce(daily_transactions.non_essential_cost_proportion, 0)::decimal(8, 4) as non_essential_cost_proportion,\n        coalesce(daily_work.total_working_time, 0)::int as total_working_time,\n        coalesce(daily_work.meeting_time, 0)::int as meeting_time,\n        coalesce(daily_work.meeting_proportion, 0)::decimal(8, 4) as meeting_proportion,\n        coalesce(daily_work.working_day_meeting_proportion, 0)::decimal(8, 4) as working_day_meeting_proportion,\n    from date_dim\n        left join daily_transactions using (metric_date)\n        left join daily_work using (metric_date)\n    order by date_dim.metric_date\n)\n\nselect * from final", "relation_name": "billiam.presentation.daily_metrics"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-24T12:56:30.769328Z", "completed_at": "2024-04-24T12:56:30.803855Z"}, {"name": "execute", "started_at": "2024-04-24T12:56:30.805025Z", "completed_at": "2024-04-24T12:56:30.805030Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.04078221321105957, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.billiam_database.pl__transactions_cube", "compiled": true, "compiled_code": "\n\n\n/*\n    Not helpful for me, but illustrates the usage\n*/\n\nWITH\n    int_transaction_items AS (\n        SELECT \n          /* no columns returned from star() macro */\n        FROM billiam.intermediate.transaction_items\n    ),\n\nfinal as (\n    -- noqa: disable=ST06\n    select\n        grouping_id(\n            transaction_date,\n            category,\n            counterparty,\n            exclusion_flag\n        ) as group_id,\n        transaction_date,\n        category,\n        counterparty,\n        exclusion_flag,\n\n        count(distinct transaction_id) as total_transaction_count,\n        count(*) as total_item_count,\n        count(distinct item) as distinct_item_count,\n        sum(\"cost\") as total_cost,\n        avg(\"cost\") as average_cost,\n        min(\"cost\") as min_cost,\n        max(\"cost\") as max_cost,\n        stddev_pop(\"cost\") as standard_dev_cost,\n    from int_transaction_items\n    -- noqa: enable=ST06\n    \n    group by cube(\n        transaction_date,\n        category,\n        counterparty,\n        exclusion_flag\n    )\n)\n\nselect * from final", "relation_name": "billiam.presentation.transactions_cube"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-24T12:56:30.811460Z", "completed_at": "2024-04-24T12:56:30.817530Z"}, {"name": "execute", "started_at": "2024-04-24T12:56:30.818672Z", "completed_at": "2024-04-24T12:56:30.818676Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009408950805664062, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.billiam_database.not_null_int__transaction_items_exclusion_flag.405d57b4a7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect exclusion_flag\nfrom billiam.intermediate.transaction_items\nwhere exclusion_flag is null\n\n\n", "relation_name": null}], "elapsed_time": 0.9112584590911865, "args": {"static_parser": true, "show_resource_report": false, "vars": {}, "select": [], "log_level_file": "debug", "favor_state": false, "log_format_file": "default", "partial_parse_file_diff": true, "use_colors": true, "write_json": true, "log_format": "default", "printer_width": 80, "version_check": true, "strict_mode": false, "warn_error_options": {"include": [], "exclude": []}, "compile": true, "print": true, "project_dir": "billiam_database/", "indirect_selection": "eager", "introspect": true, "cache_selected_only": false, "quiet": false, "use_colors_file": true, "static": false, "send_anonymous_usage_stats": true, "exclude": [], "defer": false, "log_level": "info", "populate_cache": true, "partial_parse": true, "log_path": "billiam_database/logs", "invocation_command": "dbt docs generate", "enable_legacy_logger": false, "use_experimental_parser": true, "log_file_max_bytes": 10485760, "which": "generate", "macro_debugging": false, "empty_catalog": false, "profiles_dir": "billiam_database/"}}